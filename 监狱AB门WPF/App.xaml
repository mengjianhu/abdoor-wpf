<prism:PrismApplication x:Class="监狱AB门WPF.App"
                        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                        xmlns:local="clr-namespace:监狱AB门WPF"
                        xmlns:prism="http://prismlibrary.com/"
                        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                        xmlns:rybyer="http://rubyer.io/winfx/xaml/toolkit"
                        xmlns:pu="clr-namespace:Panuon.WPF.UI;assembly=Panuon.WPF.UI">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>

                <ResourceDictionary Source="pack://application:,,,/Rubyer;component/Themes/Generic.xaml" />
                <materialDesign:BundledTheme BaseTheme="Light"
                                             PrimaryColor="Indigo"
                                             SecondaryColor="Blue" />
              
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />

                <ResourceDictionary>
                    <pu:PendingBoxSettings x:Key="pendingSetting">
                        <pu:PendingBoxSettings.SpinStyle>
                            <Style BasedOn="{StaticResource {ComponentResourceKey ResourceId=SpinStyle, TypeInTargetAssembly={x:Type pu:PendingBox}}}"
                                   TargetType="pu:Spin">
                                <Setter Property="SpinStyle"
                                        Value="Ring2" />
                                <Setter Property="GlyphBrush"
                                        Value="Purple" />

                            </Style>
                        </pu:PendingBoxSettings.SpinStyle>

                        <pu:PendingBoxSettings.CancelButtonStyle>
                            <!--Attention : CancelButtonStyle in PendingBox does not support Helpers in PanuonUI-->
                            <Style BasedOn="{StaticResource {ComponentResourceKey ResourceId=CancelButtonStyle, TypeInTargetAssembly={x:Type pu:PendingBox}}}"
                                   TargetType="Button">
                                <Setter Property="Background"
                                        Value="#6CBCEA" />
                                <Setter Property="Foreground"
                                        Value="White" />
                                <Style.Triggers>
                                    <Trigger Property="IsPressed"
                                             Value="True">
                                        <Setter Property="Background"
                                                Value="#6CABEA" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </pu:PendingBoxSettings.CancelButtonStyle>

                        <pu:PendingBoxSettings.WindowStyle>
                            <!--Attention : CancelButtonStyle in PendingBox does not support Helpers in PanuonUI-->
                            <Style BasedOn="{StaticResource {ComponentResourceKey ResourceId=WindowStyle, TypeInTargetAssembly={x:Type pu:PendingBox}}}"
                                   TargetType="Window">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Window">
                                            <Border CornerRadius="15">
                                                <Border.Background>
                                                    <LinearGradientBrush>
                                                        <LinearGradientBrush.GradientStops>
                                                            <GradientStop Offset="0.5"
                                                                          Color="#43CBFF" />
                                                            <GradientStop Offset="1.0"
                                                                          Color="#9708CC" />

                                                        </LinearGradientBrush.GradientStops>
                                                    </LinearGradientBrush>
                                                </Border.Background>
                                                <ContentPresenter />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="FontSize"
                                        Value="30" />
                                <Setter Property="Foreground"
                                        Value="White" />


                            </Style>
                        </pu:PendingBoxSettings.WindowStyle>
                    </pu:PendingBoxSettings>

                    <pu:MessageBoxXSettings x:Key="messageSetting">
                        <pu:MessageBoxXSettings.WindowXStyle>
                            <Style TargetType="pu:WindowX"
                                   BasedOn="{StaticResource {ComponentResourceKey ResourceId=WindowXStyle, TypeInTargetAssembly={x:Type pu:MessageBoxX}}}">
                                <Setter Property="SizeToContent"
                                        Value="Manual" />
                                <Setter Property="Width"
                                        Value="400" />
                                <Setter Property="Height"
                                        Value="200" />
                                <Setter Property="FontSize"
                                        Value="20" />

                            </Style>
                        </pu:MessageBoxXSettings.WindowXStyle>
                        <pu:MessageBoxXSettings.ButtonStyle>
                            <Style TargetType="Button"
                                   BasedOn="{StaticResource {ComponentResourceKey ResourceId=ButtonStyle, TypeInTargetAssembly={x:Type pu:MessageBoxX}}}">
                                <Setter Property="pu:ButtonHelper.CornerRadius"
                                        Value="4" />
                                <Style.Triggers>
                                    <Trigger Property="IsDefault"
                                             Value="True">
                                        <Setter Property="Foreground"
                                                Value="#FFFFFF" />
                                        <Setter Property="Background"
                                                Value="#80BEE8" />
                                        <Setter Property="FontSize"
                                                Value="20" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </pu:MessageBoxXSettings.ButtonStyle>
                    </pu:MessageBoxXSettings>
                    <pu:NoticeBoxSettings x:Key="noticeSetting">
                        <pu:NoticeBoxSettings.NoticeBoxItemStyle>
                            <Style TargetType="pu:NoticeBoxItem"
                                   BasedOn="{StaticResource {ComponentResourceKey ResourceId=NoticeBoxItemStyle, TypeInTargetAssembly={x:Type pu:NoticeBox}}}">
                                <Setter Property="Background"
                                        Value="#1E1E1E" />
                                <Setter Property="BorderBrush"
                                        Value="#4E4E4E" />
                                <Setter Property="Foreground"
                                        Value="White" />
                            </Style>
                        </pu:NoticeBoxSettings.NoticeBoxItemStyle>
                    </pu:NoticeBoxSettings>

                     
                </ResourceDictionary>

                
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="MyListBoxItemStyle"
                   TargetType="ListBoxItem">
                <Setter Property="MinHeight"
                        Value="40" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Grid>
                                <Border x:Name="borderHeader" />
                                <Border x:Name="border" />
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected"
                                         Value="True">
                                    <Setter TargetName="borderHeader"
                                            Property="BorderThickness"
                                            Value="4,0,0,0" />
                                    <Setter TargetName="borderHeader"
                                            Property="BorderBrush"
                                            Value="{DynamicResource PrimaryHueLightBrush}" />
                                    <Setter TargetName="border"
                                            Property="Background"
                                            Value="green" />
                                    <Setter TargetName="border"
                                            Property="Opacity"
                                            Value="0.6" />
                                </Trigger>

                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter TargetName="border"
                                            Property="Background"
                                            Value="green" />
                                    <Setter TargetName="border"
                                            Property="Opacity"
                                            Value="0.6" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>

    </Application.Resources>
</prism:PrismApplication>
